// ------------------------------
// Mixins for Responsive Layout System
//
// [1] Order
// [2] Layout
// [3] Offset
// [4] Flex Properties
// [5] Align
//
// ------------------------------

// [1] --------------------------
@mixin bb-flex-order-for-name($suffix: null) {
  $selector: bb-prefix() + 'flex-order';
  @if $suffix != null {
    $selector: bb-prefix() + 'flex-order-#{$suffix}';
  }

  .#{$selector}-0 {
    order: 0;
  }
  .#{$selector}-1 {
    order: 1;
  }
  .#{$selector}-2 {
    order: 2;
  }
  .#{$selector}-3 {
    order: 3;
  }
  .#{$selector}-4 {
    order: 4;
  }
  .#{$selector}-5 {
    order: 5;
  }
  .#{$selector}-6 {
    order: 6;
  }
  .#{$selector}-7 {
    order: 7;
  }
  .#{$selector}-8 {
    order: 8;
  }
  .#{$selector}-9 {
    order: 9;
  }
}

// [2] --------------------------
@mixin bb-layout-for-name($name) {
  $name: bb-prefix() + $name;

  .#{$name} {
    box-sizing: border-box;
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-box;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
  }

  .#{$name}-column {
    flex-direction: column;
    -webkit-flex-direction: column;
  }

  .#{$name}-column-reverse {
    flex-direction: column-reverse;
    -webkit-flex-direction: column-reverse;
  }

  .#{$name}-row {
    flex-direction: row;
    -webkit-flex-direction: row;
  }

  .#{$name}-row-reverse {
    flex-direction: row-reverse;
    -webkit-flex-direction: row-reverse;
  }
}

// [3] --------------------------
@mixin bb-offset-for-name($name: null) {
  $offsetName: bb-prefix() + 'offset';
  @if $name != null {
    $offsetName: bb-prefix() + 'offset-#{$name}';
  }

  @for $i from 1 through 19 {
    .#{$offsetName}-#{$i*5} {
      margin-left: #{$i * 5 + '%'};
    }
  }

  .#{$offsetName}-33, .#{$offsetName}-34 {
    margin-left: 33.33%;
  }
  .#{$offsetName}-66, .#{$offsetName}-67 {
    margin-left: 66.66%;
  }
}

// [4] --------------------------
@mixin bb-flex-properties-for-name($name: null) {
  $flexName: bb-prefix() + 'flex';
  $layoutName: bb-prefix(true);
  @if $name != null {
    $flexName: bb-prefix() + 'flex-#{$name}';
    $layoutName: bb-prefix() + $name;
  }

  .#{$flexName} {
    box-sizing: border-box;
    @include bb-flex()
  }

  @if ($flexName == bb-prefix() + 'flex') {
    .#{$flexName}, .#{$flexName}-initial {
      box-sizing: border-box;
      flex: 0 1 auto;
    }

    .#{$flexName}-1 {
      box-sizing: border-box;
      flex: 1 1 0%;
    }

    .#{$flexName}-auto {
      box-sizing: border-box;
      flex: 1 1 auto;
    }
  }

  // (0-20) * 5 = 0-100%
  @for $i from 0 through 20 {
    .#{$flexName}-#{$i * 5} {
      @include bb-flex($i * 5)
    }
    // Set width/height for row
    .#{$layoutName}-row > *,
    .#{$layoutName}-row-reverse > * {
      max-width: #{$i * 5 + '%'};
      max-height: 100%;
    }
    // Set height/width for column
    .#{$layoutName}-column > *,
    .#{$layoutName}-column-reverse > * {
      max-height: #{$i * 5 + '%'};
      max-width: 100%;
    }
  }

  .#{$flexName}-33, .#{$flexName}-34 {
    @include bb-flex(34)
  }

  .#{$flexName}-66, .#{$flexName}-67 {
    @include bb-flex(66)
  }
}

// [5] --------------------------
@mixin bb-align-for-name($suffix: null) {
  $name: bb-prefix() + 'align';
  @if $suffix != null {
    $name: bb-prefix() + 'align-#{$suffix}';
  }
  // ------------------------------
  // Alignment attributes for layout containers' children
  // Arrange on the Main Axis
  // center, start, end, space-between, space-around
  // flex-start is the default for justify-content
  // ------------------------------

  // Main Axis Center
  .#{$name}-center,
  .#{$name}-center-center,
  .#{$name}-center-start,
  .#{$name}-center-end {
    justify-content: center;
  }

  // Main Axis Start
  .#{$name}-start,
  .#{$name}-start-center,
  .#{$name}-start-start,
  .#{$name}-start-end {
    justify-content: flex-start;
  }

  // Main Axis End
  .#{$name}-end,
  .#{$name}-end-center,
  .#{$name}-end-start,
  .#{$name}-end-end {
    justify-content: flex-end;
  }

  // Main Axis Space Around
  .#{$name}-space-around,
  .#{$name}-space-around-center,
  .#{$name}-space-around-start,
  .#{$name}-space-around-end {
    justify-content: space-around;
  }

  // Main Axis Space Between
  .#{$name}-space-between,
  .#{$name}-space-between-center,
  .#{$name}-space-between-start,
  .#{$name}-space-between-end {
    justify-content: space-between;
  }

  // ------------------------------
  // Arrange on the Cross Axis
  // center, start, end
  // stretch is the default for align-items
  // ------------------------------

  // Cross Axis Stretch
  .#{$name}-center-stretch,
  .#{$name}-start-stretch,
  .#{$name}-end-stretch,
  .#{$name}-space-between-stretch,
  .#{$name}-space-around-stretch {
    align-items: stretch;
  }

  // Cross Axis Center
  .#{$name}-center-center,
  .#{$name}-start-center,
  .#{$name}-end-center,
  .#{$name}-space-between-center,
  .#{$name}-space-around-center {
    align-items: center;
  }

  // Cross Axis Start
  .#{$name}-center-start,
  .#{$name}-start-start,
  .#{$name}-end-start,
  .#{$name}-space-between-start,
  .#{$name}-space-around-start {
    align-items: flex-start;
  }

  // Cross Axis End
  .#{$name}-center-end,
  .#{$name}-start-end,
  .#{$name}-end-end,
  .#{$name}-space-between-end,
  .#{$name}-space-around-end {
    align-items: flex-end;
  }

  // Align Content
  .#{$name}-content-stretch {
    align-content: stretch;
  }
  .#{$name}-content-start {
    align-content: flex-start;
  }
  .#{$name}-content-end {
    align-content: flex-end;
  }
  .#{$name}-content-center {
    align-content: center;
  }
  .#{$name}-content-space-around {
    align-content: space-around;
  }
  .#{$name}-content-space-between {
    align-content: space-between;
  }
}

// ------------------------------
// Flex mixin
// ------------------------------

@mixin bb-flex($size: null) {

  @if $size == null {
    flex: 1;
  } @else {
    flex: 0 0 #{$size + '%'};
    // Set max-width, this is to force it to behave as child of "row" even if "row" isn't set to parent element
    // It is overwritten if parent element has "column" class
    max-width: #{$size + '%'};
  }
  display: flex;
}